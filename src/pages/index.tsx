import type { NextPage } from "next";
import Head from "next/head";
import { Fragment, useEffect } from "react";
import { useInView } from "react-intersection-observer";
import { trpc } from "../utils/trpc";
import { Header } from "../components/Header";
import { PokemonCard } from "../components/PokemonCard";

const Home: NextPage = () => {
  const { ref, inView } = useInView();

  const { data: pokemons, fetchNextPage } = trpc.useInfiniteQuery(
    ["pokemon.get-infinite", {}],
    {
      getNextPageParam: (lastPage) => lastPage.nextOffset,
    }
  );

  useEffect(() => {
    if (inView) {
      fetchNextPage();
    }
  }, [inView]);

  return (
    <>
      <Head>
        <title>Pokedex - Gotta catch &apos;em all</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />

      <main className="max-w-8xl mx-auto flex flex-col flex-1 items-center min-h-[calc(100vh)-4.5rem] pt-4">
        <div className="grid md:grid-cols-4 gap-10 w-full">
          <div className="md:col-span-2 lg:col-span-1 md:sticky md:top-[5.5rem] md:h-[calc(100vh-4.5rem)]">
            Random pokemon
          </div>

          <ul className="grid lg:grid-cols-2 gap-6 w-fit md:col-span-2 lg:col-span-3 mx-auto">
            {pokemons?.pages.map((page, index) => {
              return (
                <Fragment key={index}>
                  {page.results.map((pokemon) => (
                    <PokemonCard key={pokemon.id} pokemon={pokemon} />
                  ))}
                </Fragment>
              );
            })}
            <div ref={ref}></div>
          </ul>
        </div>
      </main>
    </>
  );
};

export default Home;
