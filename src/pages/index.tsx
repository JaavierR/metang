import type { NextPage } from "next";
import Head from "next/head";
import PokemonCard from "../components/PokemonCard";
import { trpc } from "../utils/trpc";

const Home: NextPage = () => {
  const {
    data: pokemon,
    isLoading,
    error,
    refetch,
  } = trpc.useQuery(["pokemon.get-one"], {
    refetchInterval: false,
    refetchOnReconnect: false,
    refetchOnWindowFocus: false,
  });

  function newPokemon(e: React.MouseEvent<HTMLButtonElement>) {
    e.preventDefault();
    refetch();
  }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container mx-auto flex flex-col items-center justify-center min-h-screen p-4">
        <h1 className="text-5xl leading-normal font-extrabold text-gray-700">
          Random <span className="text-purple-300">Pokemon</span> App
        </h1>

        <button
          type="button"
          onClick={newPokemon}
          className="bg-purple-500 hover:bg-purple-600 px-4 py-1 rounded mt-6 text-white text-xs font-semibold uppercase"
        >
          Fetch new
        </button>

        {isLoading && <p>Loading...</p>}
        {error && <p>{error.message}</p>}
        {pokemon && <PokemonCard pokemon={pokemon} />}
      </main>
    </>
  );
};

export default Home;
