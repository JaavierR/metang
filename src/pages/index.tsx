import type { NextPage } from "next";
import Head from "next/head";
import React, { Fragment, useEffect } from "react";
import PokemonCard from "../components/PokemonCard";
import { useInView } from "react-intersection-observer";
import { trpc } from "../utils/trpc";
import { Header } from "../components/Header";

const Home: NextPage = () => {
  const { ref, inView } = useInView();

  const {
    data: pokemon,
    isLoading,
    error,
    refetch,
  } = trpc.useQuery(["pokemon.get-one"], {
    refetchInterval: false,
    refetchOnReconnect: false,
    refetchOnWindowFocus: false,
    enabled: false,
  });

  const { data: pokemons, fetchNextPage } = trpc.useInfiniteQuery(
    ["pokemon.get-infinite", {}],
    {
      getNextPageParam: (lastPage) => lastPage.nextOffset,
    }
  );

  useEffect(() => {
    if (inView) {
      fetchNextPage();
    }
  }, [inView]);

  function newPokemon(e: React.MouseEvent<HTMLButtonElement>) {
    e.preventDefault();
    refetch();
  }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />

      <main className="container mx-auto flex flex-col items-center justify-center min-h-screen p-4">
        <div className="grid grid-cols-2 gap-20 max-w-xl w-full">
          <div>
            <div className="mt-10">
              {pokemons?.pages.map((page, index) => {
                return (
                  <Fragment key={index}>
                    {page.results.map(
                      (pokemon: { name: string; sprite: string }) => (
                        <>
                          <img src={pokemon.sprite} alt="image" />
                          <p
                            key={pokemon.name}
                            className="capitalize text-gray-700 font-semibold"
                          >
                            {pokemon.name}
                          </p>
                        </>
                      )
                    )}
                  </Fragment>
                );
              })}
            </div>
            <div ref={ref}></div>
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
